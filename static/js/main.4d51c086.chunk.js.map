{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addItem","item","setState","removeItem","filter","selectedItem","showChosenItems","length","slice","join","removeSelections","this","className","type","onClick","map","isItemSelected","includes","classNames","itemSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAe,CACbC,cAAe,IAFnB,EAKEC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACJ,GAAD,MAAmB,CAC/BC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,SAP9C,EAWEE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAACJ,GAAD,MAAmB,CAC/BC,cAAeD,EAAMC,cAAcK,QAAO,SAAAC,GAAY,OAAIA,IAAiBJ,UAbjF,EAiBEK,gBAAkB,WAChB,IAAQP,EAAkB,EAAKD,MAAvBC,cAER,OAA6B,IAAzBA,EAAcQ,OACT,oBAGoB,IAAzBR,EAAcQ,OACV,GAAN,OAAUR,EAAV,aAGI,GAAN,OAAWA,EAAcS,MAAM,EAAGT,EAAcQ,OAAS,GAAIE,KAAK,MAAlE,gBAA+EV,EAAcA,EAAcQ,OAAS,GAApH,kBA5BJ,EA+BEG,iBAAmB,WAGjB,OAFA,EAAKR,SAAS,CAAEH,cAAe,KAExB,qBAlCX,4CAqCE,WAAU,IAAD,OACCA,EAAkBY,KAAKb,MAAvBC,cAER,OACE,sBAAKa,UAAU,MAAf,UACE,qBAAIA,UAAU,oBAAd,UACGD,KAAKL,kBACoB,IAAzBP,EAAcQ,QACb,wBACEM,KAAK,SACLD,UAAU,qBACVE,QAASH,KAAKD,iBAHhB,2BASJ,8BACGd,EAAgBmB,KAAI,SAAAd,GACnB,IAAMe,EAAiBjB,EAAckB,SAAShB,GAE9C,OACE,sBAAKW,UAAU,gBAAf,UACE,oBAAIA,UAAWM,IAAW,OAAQ,CAAEC,aAAcH,IAAlD,SACGf,IAEH,wBACEY,KAAK,SACLD,UAAU,SACVE,QAASE,EACL,WACA,EAAKb,WAAWF,IAEhB,WACA,EAAKD,QAAQC,IARnB,SAWGe,EAAiB,SAAW,UAfGf,eA3DlD,GAAyBmB,IAAMC,WAqFhBxB,ICvGfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4d51c086.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport interface State {\n  selectedGoods: string[];\n}\n\nexport class App extends React.Component {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  addItem = (item: string) => {\n    this.setState((state: State) => ({\n      selectedGoods: [...state.selectedGoods, item],\n    }));\n  };\n\n  removeItem = (item: string) => {\n    this.setState((state: State) => ({\n      selectedGoods: state.selectedGoods.filter(selectedItem => selectedItem !== item),\n    }));\n  };\n\n  showChosenItems = () => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      return `${selectedGoods} selected`;\n    }\n\n    return `${(selectedGoods.slice(0, selectedGoods.length - 1)).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n  };\n\n  removeSelections = () => {\n    this.setState({ selectedGoods: [] });\n\n    return 'No goods selected';\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"selectedItemsList\">\n          {this.showChosenItems()}\n          {selectedGoods.length !== 0 && (\n            <button\n              type=\"button\"\n              className=\"button button--top\"\n              onClick={this.removeSelections}\n            >\n              Remove all\n            </button>\n          )}\n        </h1>\n        <div>\n          {goodsFromServer.map(item => {\n            const isItemSelected = selectedGoods.includes(item);\n\n            return (\n              <div className=\"itemAndButton\" key={item}>\n                <li className={classNames('item', { itemSelected: isItemSelected })}>\n                  {item}\n                </li>\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={isItemSelected\n                    ? () => {\n                      this.removeItem(item);\n                    }\n                    : () => {\n                      this.addItem(item);\n                    }}\n                >\n                  {isItemSelected ? 'Remove' : 'Add'}\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}